package pt.tecnico.grpc.server;

/* these imported classes are generated by the hello-world-server contract */
import pt.tecnico.grpc.UserMainServer;
import pt.tecnico.grpc.UserMainServerServiceGrpc;
import pt.tecnico.grpc.server.mainServer;
import pt.tecnico.grpc.server.server;
import io.grpc.Server;

import io.grpc.stub.StreamObserver;

public class mainServerServiceImpl extends UserMainServerServiceGrpc.UserMainServerServiceImplBase {

	//--------------------------user-mainServer communication implementation--------------------------
	
	private mainServer server = new mainServer();
	private server listeningServer = new server();

	@Override
	public void greeting(UserMainServer.HelloRequest request, StreamObserver<UserMainServer.HelloResponse> responseObserver) {

		// HelloRequest has auto-generated toString method that shows its contents
		System.out.println(request);

		// You must use a builder to construct a new Protobuffer object
		UserMainServer.HelloResponse response = UserMainServer.HelloResponse.newBuilder()
				.setGreeting(server.greet(request.getName())).build();

		// Use responseObserver to send a single response back
		responseObserver.onNext(response);

		// When you are done, you must call onCompleted
		responseObserver.onCompleted();

		//listeningServer.getServer().shutdown(); use later for killing main server in case of ransomware attack
		//listeningServer.getChannel().shutdown() use later for killing main server's client channel in case of ransomware attack
	}

}
